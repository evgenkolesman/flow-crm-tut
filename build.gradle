plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.16'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'com.vaadin' version '23.3.24'
}

group = 'ru.koleson'
version = '0.0.1-SNAPSHOT'

java {

    toolchain.languageVersion.set(JavaLanguageVersion.of(17))
//    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
//    implementation(project("someproject")) для подпроекта
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation libs.vaadin
    implementation libs.vaadin.chart
    implementation 'org.liquibase:liquibase-core'
    implementation libs.mybatis
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation libs.mybatis.test
}

//dependencyManagement {
//    imports {
//        mavenBom libs.vaadin
//    }
//}   -- all in libs maybe is a way for dependency manging with libs need check

tasks.register('HELLO') {
    doFirst {
        println("++++++++++++++++++ HELLO WE START BUILD +++++++++++++++++")
    }
}

tasks.named('build'){
    dependsOn(tasks.named('HELLO'))
}

tasks.configureEach {
    doFirst {
        println("task $name started")
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

//tasks.withType(Test).configureEach {
//    enabled(false)
//}


//tasks.withType(CompileTest).configureEach {
//    enabled(false)
//}



//tasks.named('build') {
//    add(getTasksByName("HELLO"))
//}



//
//test{
//    exclude('**/')
//}

//
//tasks.named('test') {
//    replace('test')
//}

